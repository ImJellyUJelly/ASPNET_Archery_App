@model ArcheryApplication.Classes.Schutter
@using ArcheryApplication.Classes;

@{
    ViewBag.Title = "EditSchutter";
}

<h2>Bewerk schutter</h2>


@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Baan.Id)
    @Html.HiddenFor(model => model.Baan.Wedstrijd.Id)
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Bondsnummer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Bondsnummer, new { htmlAttributes = new { @class = "form-control" }, required = "required" })
                @Html.ValidationMessageFor(model => model.Bondsnummer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Naam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Naam, new { htmlAttributes = new { @class = "form-control" }, required = "required" })
                @Html.ValidationMessageFor(model => model.Naam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Geboortedatum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Geboortedatum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Geboortedatum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Emailadres, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" name="emaildiv">
                @Html.EditorFor(model => model.Emailadres, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Emailadres, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Geslacht, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Geslacht, EnumHelper.GetSelectList(typeof(Geslacht)), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discipline, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Discipline, EnumHelper.GetSelectList(typeof(Discipline)), new { @class = "form-control" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Klasse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Klasse, EnumHelper.GetSelectList(typeof(Klasse)), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opmerking, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Opmerking, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opmerking, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Bewerk" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Terug naar wedstrijd", "Details", new { id = Model.Baan.Wedstrijd.Id })
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
